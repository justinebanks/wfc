#pragma once

#include <vector>
#include <raylib/raylib.h>

#define ERROR_TILE Vector2{7, 4}
#define EMPTY Vector2{17, 10}

#define EMPTY_GRASS Vector2{0, 0}
#define GRASS Vector2{1, 0}
#define FLOWERS Vector2{2, 0}
#define X1 Vector2{3, 0}
#define X2 Vector2{4, 0}
#define TOP_LEFT_CORNER Vector2{0, 1}
#define TOP_EDGE Vector2{1, 1}
#define TOP_RIGHT_CORNER Vector2{2, 1}
#define X3 Vector2{3, 1}
#define X4 Vector2{4, 1}
#define LEFT_EDGE Vector2{0, 2}
#define WATER Vector2{1, 2}
#define RIGHT_EDGE Vector2{2, 2}
#define RIVER_TOP Vector2{3, 2}
#define BOTTOM_LEFT_CORNER Vector2{0, 3}
#define BOTTOM_EDGE Vector2{1, 3}
#define BOTTOM_RIGHT_CORNER Vector2{2, 3}
#define VERTICAL_RIVER Vector2{3, 3}
#define RIVER_LEFT Vector2{0, 4}
#define HORIZONTAL_RIVER Vector2{1, 4}
#define RIVER_RIGHT Vector2{2, 4}
#define RIVER_BOTTOM Vector2{3, 4}
#define TOP_LEFT_LAND Vector2{0, 5}
#define TOP_RIGHT_LAND Vector2{1, 5}
#define BOTTOM_LEFT_LAND Vector2{2, 5}
#define BOTTOM_RIGHT_LAND Vector2{3, 5}

#define LAND EMPTY_GRASS, GRASS, FLOWERS

struct RuleSet {
    Vector2 tile;
    std::vector<Vector2> top;
    std::vector<Vector2> bottom;
    std::vector<Vector2> left;
    std::vector<Vector2> right;  
};

const std::vector<std::vector<Vector2>>  LAND_RULES = {
    {BOTTOM_LEFT_CORNER, BOTTOM_EDGE, BOTTOM_RIGHT_CORNER, LAND}, 
    {TOP_LEFT_CORNER, TOP_EDGE, TOP_RIGHT_CORNER, LAND}, 
    {TOP_RIGHT_CORNER, RIGHT_EDGE, BOTTOM_RIGHT_CORNER, LAND}, 
    {TOP_LEFT_CORNER, LEFT_EDGE, BOTTOM_LEFT_CORNER, LAND}
};


RuleSet EMPTY_GRASS_RULE = RuleSet{EMPTY_GRASS, LAND_RULES.at(0), LAND_RULES.at(1), LAND_RULES.at(2), LAND_RULES.at(3)};
RuleSet GRASS_RULE = RuleSet{GRASS, LAND_RULES.at(0), LAND_RULES.at(1), LAND_RULES.at(2), LAND_RULES.at(3)};
RuleSet FLOWERS_RULE = RuleSet{FLOWERS, LAND_RULES.at(0), LAND_RULES.at(1), LAND_RULES.at(2), LAND_RULES.at(3)};

RuleSet TOP_LEFT_CORNER_RULE = RuleSet{TOP_LEFT_CORNER, LAND_RULES.at(0), {LEFT_EDGE, BOTTOM_LEFT_CORNER}, LAND_RULES.at(2), {TOP_EDGE, TOP_RIGHT_CORNER}};
RuleSet TOP_RIGHT_CORNER_RULE = RuleSet{TOP_RIGHT_CORNER, LAND_RULES.at(0), {RIGHT_EDGE, BOTTOM_RIGHT_CORNER}, {TOP_EDGE, TOP_LEFT_CORNER}, LAND_RULES.at(3)};
RuleSet BOTTOM_LEFT_CORNER_RULE = RuleSet{BOTTOM_LEFT_CORNER, {LEFT_EDGE, TOP_LEFT_CORNER}, LAND_RULES.at(1), LAND_RULES.at(2), {BOTTOM_EDGE, BOTTOM_RIGHT_CORNER}};
RuleSet BOTTOM_RIGHT_CORNER_RULE = RuleSet{BOTTOM_RIGHT_CORNER, {RIGHT_EDGE, TOP_RIGHT_CORNER}, LAND_RULES.at(1), {BOTTOM_EDGE, BOTTOM_LEFT_CORNER}, LAND_RULES.at(3)};

RuleSet TOP_EDGE_RULE = RuleSet{TOP_EDGE, LAND_RULES.at(0), {WATER, BOTTOM_EDGE}, {TOP_LEFT_CORNER, TOP_EDGE}, {TOP_RIGHT_CORNER, TOP_EDGE}};
RuleSet BOTTOM_EDGE_RULE = RuleSet{BOTTOM_EDGE, {WATER, TOP_EDGE}, LAND_RULES.at(1), {BOTTOM_LEFT_CORNER, BOTTOM_EDGE}, {BOTTOM_RIGHT_CORNER, BOTTOM_EDGE}};
RuleSet LEFT_EDGE_RULE = RuleSet{LEFT_EDGE, {LEFT_EDGE, TOP_LEFT_CORNER}, {LEFT_EDGE, BOTTOM_LEFT_CORNER}, LAND_RULES.at(2), {WATER, RIGHT_EDGE}};
RuleSet RIGHT_EDGE_RULE = RuleSet{RIGHT_EDGE, {RIGHT_EDGE, TOP_RIGHT_CORNER}, {RIGHT_EDGE, BOTTOM_RIGHT_CORNER}, {WATER, LEFT_EDGE}, LAND_RULES.at(3)};

RuleSet WATER_RULE = RuleSet{WATER, {TOP_EDGE, WATER}, {BOTTOM_EDGE, WATER}, {LEFT_EDGE, WATER}, {RIGHT_EDGE, WATER}};

std::vector<Vector2> ALL_POSSIBILITIES = {EMPTY_GRASS, GRASS, FLOWERS, TOP_LEFT_CORNER, TOP_RIGHT_CORNER, BOTTOM_LEFT_CORNER, BOTTOM_RIGHT_CORNER, TOP_EDGE, BOTTOM_EDGE, LEFT_EDGE, RIGHT_EDGE, WATER};
std::vector<RuleSet> ALL_RULES = {EMPTY_GRASS_RULE, GRASS_RULE, FLOWERS_RULE, TOP_LEFT_CORNER_RULE, TOP_RIGHT_CORNER_RULE, BOTTOM_LEFT_CORNER_RULE, BOTTOM_RIGHT_CORNER_RULE, TOP_EDGE_RULE, BOTTOM_EDGE_RULE, LEFT_EDGE_RULE, RIGHT_EDGE_RULE, WATER_RULE};
